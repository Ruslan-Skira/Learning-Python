import math
"""
1) написать функцию которая в качестве аргумента принимает размер стороны квадрата, а возвращает кортеж в котором лежат три значения:
 -периметр квадрата;
 -диагональ квадрата;
 -площадь квадрата.
"""
def characteristics_square(side):    
    p = 4 * side
    d = side * math.sqrt(2)
    s = side ** 2
    return (p, d, s)

characteristics_square(5)

"""
2) написать функцию которая принимает в качестве аргумента номер месяца, в возвращает строку - время года, этого месяца
"""
def season(n):
    season = None
    r = list(range(1, 13))
    if n in r[:2] or n == 12:
        season = "Winter"
    elif n in r[2:5]:
        season = "Spring"
    elif n in r[5:8]:
        season = "Summer"
    elif n in r[8:11]:
        season = "Autumn"
    else:
        season = "Such month doesn't exist"
    return season
season(1)

"""
3) написать функцию, которая принимает в качестве аргументов два списка, а возвращает список, состоящий из элементов этих двух списков, 
при чем первый элемент списка - первый элемент первого аргумента, второй элемент списка - первый элемент второго списка, 
третий элемент - второй элемент первого списка, четвертый - второй элемент второго аргумента и т.д.
т.е для аргументов [1, 2, 3] и [11, 22, 33] функция должна вернуть [1, 11, 2, 22, 3, 33].
Будет плюсом использование генераторов последовательностей для решения этой задачи.
"""
def new_list(list_1, list_2):
    list_3 = [[l1, l2] for l1, l2 in zip(list_1, list_2)]
    list_4 = [num for elem in list_3 for num in elem]
    return list_4

new_list([1, 2, 3], [11, 22, 33])

"""
4) Написать функцию которая принимает в качестве аргумента строку, и возвращает object True, если строка является полиндромом 
и object False если нет.
"""
def is_polindrom(string):
    if string == string[::-1]:
        return True
    else:
        return False
    
is_polindrom("AnnA")
